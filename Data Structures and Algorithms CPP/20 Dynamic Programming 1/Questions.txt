Coding Problem
Problem Statement: Min Steps to one
Problem Level: EASY
Problem Description:
Given a positive integer 'n',  find and return the minimum number of steps that 'n' has to take to get reduced to 1. You can perform 
any one of the following 3 steps:
1.) Subtract 1 from it. (n = n - 足1) ,
2.) If its divisible by 2, divide by 2.( if n % 2 == 0, then n = n / 2 ) ,
3.) If its divisible by 3, divide by 3. (if n % 3 == 0, then n = n / 3 ).

Write brute-force recursive solution for this.
Input format :
The first and the only line of input contains an integer value, 'n'.

Output format :
Print the minimum number of steps.

Constraints :
1 <= n <= 200

Time Limit: 1 sec

Sample Input  1 :
4

Sample Output  1 :
2

Explanation of Sample Output 1 :
For n = 4
Step 1 :  n = 4 / 2  = 2
Step 2 : n = 2 / 2  =  1

Sample Input  2 :
7

Sample Output  2 :
3

Explanation of Sample Output 2 :
For n = 7
Step 1 :  n = 7 足- 1 = 6
Step 2 : n = 6  / 3 = 2 
Step 3 : n = 2 / 2 = 1

--------------------------------------------------------------------------------------------------------------------------------------

Coding Problem
Problem Statement: Min Steps to one using DP
Problem Level: EASY
Problem Description:
Given a positive integer 'n',  find and return the minimum number of steps that 'n' has to take to get reduced to 1. You can perform 
any one of the following 3 steps:
1.) Subtract 1 from it. (n = n - 足1) ,
2.) If n is divisible by 2, divide by 2.( if n % 2 == 0, then n = n / 2 ) ,
3.) If n is divisible by 3, divide by 3. (if n % 3 == 0, then n = n / 3 ).

Input format :
The first and the only line of input contains an integer value, 'n'.

Output format :
Print the minimum number of steps.

Constraints :
1 <= n <= 10^6

Time Limit: 1 sec

Sample Input  1 :
4

Sample Output  1 :
2

Explanation of Sample Output 1 :
For n = 4
Step 1 :  n = 4 / 2  = 2
Step 2 : n = 2 / 2  =  1

Sample Input  2 :
7

Sample Output  2 :
3

Explanation of Sample Output 2 :
For n = 7
Step 1 :  n = 7 足- 1 = 6
Step 2 : n = 6  / 3 = 2 
Step 3 : n = 2 / 2 = 1

--------------------------------------------------------------------------------------------------------------------------------------

Coding Problem
Problem Statement: Staircase
Problem Level: MEDIUM
Problem Description:
A child runs up a staircase with 'n' steps and can hop either 1 step, 2 steps or 3 steps at a time. Implement a method to count and 
return all possible ways in which the child can run-up to the stairs.
Input format :
The first and the only line of input contains an integer value, 'n', denoting the total number of steps.

Output format :
Print the total possible number of ways.

Constraints :
0 <= n <= 10^4

Time Limit: 1 sec

Sample Input 1:
4

Sample Output 1:
7

Sample Input 2:
10

Sample Output 2:
274

--------------------------------------------------------------------------------------------------------------------------------------

Coding Problem
Problem Statement: Minimum Count
Problem Level: MEDIUM
Problem Description:
Given an integer N, find and return the count of minimum numbers required to represent N as a sum of squares.
That is, if N is 4, then we can represent it as : {1^2 + 1^2 + 1^2 + 1^2} and {2^2}. The output will be 1, as 1 is the minimum count 
of numbers required to represent N as sum of squares.
Input format :
The first and the only line of input contains an integer value, 'N'.

Output format :
Print the minimum count of numbers required.

Constraints :
0 <= n <= 10^4

Time Limit: 1 sec

Sample Input 1 :
12

Sample Output 1 :
3

Explanation of Sample Output 1 :
12 can be represented as : 
A) (1^1) + (1^1) + (1^1) + (1^1) + (1^1) + (1^1) + (1^1) + (1^1) + (1^1) + (1^1) + (1^1) + (1^1)

B) (1^1) + (1^1) + (1^1) + (1^1) + (1^1) + (1^1) + (1^1) + (1^1)  + (2 ^ 2)

C) (1^1) + (1^1) + (1^1) + (1^1) + (2 ^ 2) + (2 ^ 2)

D) (2 ^ 2) + (2 ^ 2) + (2 ^ 2)

As we can see, the output should be 3.

Sample Input 2 :
9

Sample Output 2 :
1

--------------------------------------------------------------------------------------------------------------------------------------

Coding Problem
Problem Statement: Number of balanced Binary Trees
Problem Level: HARD
Problem Description:
Given an integer h, find the possible number of balanced binary trees of height h. You just need to return the count of possible 
binary trees which are balanced.
This number can be huge, so return output modulus 10^9 + 7.
Write a simple recursive solution.
Input Format :
Integer h

Output Format :
Count % 10^9 + 7

Input Constraints :
1 <= h <= 40

Sample Input 1:
3

Sample Output 1:
15

Sample Input 2:
4

Sample Output 2:
315

--------------------------------------------------------------------------------------------------------------------------------------

Coding Problem
Problem Statement: Number of balanced Binary Trees
Problem Level: HARD
Problem Description:
Given an integer h, find the possible number of balanced binary trees of height h. You just need to return the count of possible 
binary trees which are balanced.
This number can be huge, so return output modulus 10^9 + 7.
Time complexity should be O(h).
Input Format :
Integer h

Output Format :
Count % 10^9 + 7

Input Constraints :
1 <= h <= 10^7

Sample Input 1:
3

Sample Output 1:
15

Sample Input 2:
4

Sample Output 2:
315

--------------------------------------------------------------------------------------------------------------------------------------