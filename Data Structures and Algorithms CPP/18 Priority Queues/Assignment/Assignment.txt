Chapter Assignment
Problem Statement: Check Max-Heap
Problem Level: EASY
Problem Description:
Given an array of integers, check whether it represents max-heap or not. Return true if the given array represents max-heap, else 
return false.
Input Format:
The first line of input contains an integer, that denotes the value of the size of the array. Let us denote it with the symbol N.
The following line contains N space separated integers, that denote the value of the elements of the array.

Output Format :
The first and only line of output contains true if it represents max-heap and false if it is not a max-heap.

Constraints:
1 <= N <= 10^5
1 <= Ai <= 10^5
Time Limit: 1 sec

Sample Input 1:
8
42 20 18 6 14 11 9 4

Sample Output 1:
true



=====Answer=====
Correct Option: 

--------------------------------------------------------------------------------------------------------------------------------------

Chapter Assignment
Problem Statement: Kth largest element
Problem Level: MEDIUM
Problem Description:
Given an array A of random integers and an integer k, find and return the kth largest element in the array.
Note: Try to do this question in less than O(N * logN) time.
Input Format :
The first line of input contains an integer, that denotes the value of the size of the array. Let us denote it with the symbol N.
The following line contains N space separated integers, that denote the value of the elements of the array.
The following contains an integer, that denotes the value of k.

Output Format :
The first and only line of output contains the kth largest element

Constraints :
1 <= N, Ai, k <= 10^5
Time Limit: 1 sec

Sample Input 1 :
6
9 4 8 7 11 3
2

Sample Output 1 :
9

Sample Input 2 :
8
2 6 10 11 13 4 1 20
4

Sample Output 2 :
10



=====Answer=====
Correct Option: 

--------------------------------------------------------------------------------------------------------------------------------------

Chapter Assignment
Problem Statement: Merge K sorted arrays
Problem Level: MEDIUM
Problem Description:
Given k different arrays, which are sorted individually (in ascending order). You need to merge all the given arrays such that output 
array should be sorted (in ascending order).
Hint : Use Heaps.
Input Format :
Line 1 : Integer K
Line 2 : Arrays 1 size (n1)
Line 3 : Array 1 elements (separated by space)
Line 4 : Array 2 size (n2)
and so on for next arrays

Sample Input 1 :
4
3
1 5 9
2
45 90
5
2 6 78 100 234
1
0

Sample Output 1 :
0 1 2 5 6 9 45 78 90 100 234



=====Answer=====
Correct Option: 

--------------------------------------------------------------------------------------------------------------------------------------

Chapter Assignment
Problem Statement: Running median
Problem Level: HARD
Problem Description:
You are given a stream of N integers. For every i-th integer added to the running list of integers, print the resulting median.
Print only the integer part of the median.
Input Format :
The first line of input contains an integer N, denoting the number of integers in the stream.

The second line of input contains 'N' integers separated by a single space.

Output Format :
Print the running median for every integer added to the running list on a new line.

Input Constraints
1 <= N <= 10^5
1 <= Ai <= 10^5

Time Limit: 1sec

Sample Input 1 :
6
6 2 1 3 7 5

Sample Output 1 :
6
4
2
2
3
4

Explanation of Sample Output 1 :
S = {6}, median = 6
S = {6, 2} -> {2, 6}, median = 4
S = {6, 2, 1} -> {1, 2, 6}, median = 2
S = {6, 2, 1, 3} -> {1, 2, 3, 6}, median = 2
S = {6, 2, 1, 3, 7} -> {1, 2, 3, 6, 7}, median = 3
S = {6, 2, 1, 3, 7, 5} -> {1, 2, 3, 5, 6, 7}, median = 4

Sample Input 2 :
5
5 4 3 2 1

Sample Output 2 :
5
4
4
3
3



=====Answer=====
Correct Option: 

--------------------------------------------------------------------------------------------------------------------------------------

Chapter Assignment
Problem Statement: Buy the ticket
Problem Level: MEDIUM
Problem Description:
You want to buy a ticket for a well-known concert which is happening in your city. But the number of tickets available is limited. 
Hence the sponsors of the concert decided to sell tickets to customers based on some priority.
A queue is maintained for buying the tickets and every person has attached with a priority (an integer, 1 being the lowest priority). 
The tickets are sold in the following manner -
1. The first person (pi) in the queue asked to comes out.
2. If there is another person present in the queue who has higher priority than pi, then ask pi to move at end of the queue without 
giving him the ticket.
3. Otherwise, give him the ticket (and don't make him stand in queue again).
Giving a ticket to a person takes exactly 1 minutes and it takes no time for removing and adding a person to the queue. And you can 
assume that no new person joins the queue.
Given a list of priorities of N persons standing in the queue and the index of your priority (indexing starts from 0). Find and return 
the time it will take until you get the ticket.
Input Format :
Line 1 : Integer N (Total number of people standing in queue)
Line 2 : Priorities of every person (n space separated integers)
Line 3 : Integer k (index of your priority)

Output Format :
Time required

Sample Input 1 :
3
3 9 4
2

Sample Output 1 :
2

Sample Output 1 Explanation :
Person with priority 3 comes out. But there is a person with higher priority than him. So he goes and then stands in the queue at the 
end. Queue's status :  {9, 4, 3}. Time : 0 secs.
Next, the person with priority 9 comes out. And there is no person with higher priority than him. So he'll get the ticket. Queue's 
status :  {4, 3}. Time : 1 secs.
Next, the person with priority 4 comes out (which is you). And there is no person with higher priority than you. So you'll get the 
ticket. Time : 2 secs.
Sample Input 2 :
5
2 3 2 2 4
3

Sample Output 2 :
4



=====Answer=====
Correct Option: 

--------------------------------------------------------------------------------------------------------------------------------------